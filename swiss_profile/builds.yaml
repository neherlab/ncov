# Define locations for which builds should be created.
# For each build we specify a subsampling scheme via an explicit key.
# If the name of the focal geography differs from the build name this needs to
# be specified explicity as geographic_name. In addition, we require the
# geographic scale the build focuses on. Together name and scale serve a look-up
# in the geo_hierarchy to define region, country, division, etc
custom_rules:
  - nextstrain_profiles/nextstrain/subsampling_ranges.smk
  - nextstrain_profiles/nextstrain/download_preprocessed.smk
  - swiss_profile/localrules.smk

S3_BUCKET: "nextstrain-ncov-private"
nextalign_bin: "nextalign"
genes: ["ORF1a", "ORF1b", "S", "ORF3a", "M", "N"]
use_nextalign: true

cantons:
  - "Zürich"
  - "Bern"
  - "Luzern"
  - "Uri"
  - "Schwyz"
  - "Obwalden"
  - "Nidwalden"
  - "Glarus"
  - "Zug"
  - "Fribourg"
  - "Solothurn"
  - "Basel-Stadt"
  - "Basel-Landschaft"
  - "Schaffhausen"
  - "Appenzell Ausserrhoden"
  - "Appenzell Innerrhoden"
  - "Sankt Gallen"
  - "Graubünden"
  - "Aargau"
  - "Thurgau"
  - "Ticino"
  - "Vaud"
  - "Valais"
  - "Neuchâtel"
  - "Geneva"
  - "Jura"
  - "Liechtenstein"

builds:
  switzerland:
    subsampling_scheme: switzerland
    geographic_scale: country
    subclades: "nextstrain_profiles/nextstrain/subclades_EU.tsv"
    region: Europe
    country: Switzerland
    title: "Phylogenetic analysis of Swiss SARS-CoV-2 genomes in their international context"

inactive_builds:
  ccc:
    subsampling_scheme: cluster_sampling
    geographic_scale: country
    country: Switzerland
    title: "Phylogenetic analysis of Swiss SARS-CoV-2 clusters in their international context"

  basel-stadt:
    subsampling_scheme: canton
    geographic_scale: division
    region: Europe
    country: Switzerland
    division: Basel-Stadt
  basel-land:
    subsampling_scheme: canton
    geographic_scale: division
    region: Europe
    country: Switzerland
    division: Basel-Land
  geneva:
    subsampling_scheme: canton
    geographic_scale: division
    region: Europe
    country: Switzerland
    division: Geneva
  vaud:
    subsampling_scheme: canton
    geographic_scale: division
    region: Europe
    country: Switzerland
    division: Vaud
  ticino:
    subsampling_scheme: canton
    geographic_scale: division
    region: Europe
    country: Switzerland
    division: Ticino
  lac-leman:
    subsampling_scheme: lac-leman
    geographic_scale: division
    region: Europe
    country: Switzerland
    division: Lac Leman

subsampling:
  # Default subsampling logic for countries
  switzerland:
    # Focal samples for country
    country_late:
      group_by: "division year month"
      max_sequences: 2000
      sampling_scheme: "--probabilistic-sampling"
      exclude: "--exclude-where 'country!={country}'"
    country_early:
      group_by: "division year month"
      max_sequences: 300
      sampling_scheme: "--probabilistic-sampling"
      exclude: "--exclude-where 'country!={country}'"
    # Contextual samples from country's region
    region_late:
      group_by: "country year month"
      max_sequences: 500
      sampling_scheme: "--probabilistic-sampling"
      exclude: "--exclude-where 'country={country}' 'region!={region}'"
      priorities:
        type: "proximity"
        focus: "country_late"
    region_early:
      group_by: "country year month"
      max_sequences: 300
      sampling_scheme: "--probabilistic-sampling"
      exclude: "--exclude-where 'country={country}' 'region!={region}'"
      priorities:
        type: "proximity"
        focus: "country_late"
    # Contextual samples from the rest of the world,
    # excluding the current region to avoid resampling.
    global_early:
      group_by: "country year month"
      max_sequences: 100
      sampling_scheme: "--probabilistic-sampling"
      exclude: "--exclude-where 'region={region}'"
      priorities:
        type: "proximity"
        focus: "country_late"
    global_late:
      group_by: "country year month"
      max_sequences: 200
      exclude: "--exclude-where 'region={region}'"
      sampling_scheme: "--probabilistic-sampling"
      priorities:
        type: "proximity"
        focus: "country_late"

  # Default subsampling logic for clusters
  cluster_sampling:
    # Focal samples for country
    cluster:
      group_by: "division year month"
      seq_per_group: 5000
    # Contextual samples from country's region
    global:
      group_by: "year month"
      seq_per_group: 30
      priorities:
        type: "proximity"
        focus: "cluster"

  # Default subsampling logic for divisions
  canton:
    # Focal samples for division
    division_late:
      group_by: "year month"
      max_sequences: 1000
      sampling_scheme: "--probabilistic-sampling"
      exclude: "--exclude-where 'region!={region}' 'country!={country}' 'division!={division}'"
    country_late:
      group_by: "division year month"
      max_sequences: 1000
      sampling_scheme: "--probabilistic-sampling"
      exclude: "--exclude-where 'country!={country}'"
    country_early:
      group_by: "division year month"
      max_sequences: 300
      sampling_scheme: "--probabilistic-sampling"
      exclude: "--exclude-where 'country!={country}'"
    # Contextual samples from country's region
    region_late:
      group_by: "country year month"
      max_sequences: 200
      sampling_scheme: "--probabilistic-sampling"
      exclude: "--exclude-where 'country={country}' 'region!={region}'"
      priorities:
        type: "proximity"
        focus: "country_late"
    region_early:
      group_by: "country year month"
      max_sequences: 200
      sampling_scheme: "--probabilistic-sampling"
      exclude: "--exclude-where 'country={country}' 'region!={region}'"
      priorities:
        type: "proximity"
        focus: "country_late"
    # Contextual samples from the rest of the world,
    # excluding the current region to avoid resampling.
    global_early:
      group_by: "country year month"
      max_sequences: 100
      sampling_scheme: "--probabilistic-sampling"
      exclude: "--exclude-where 'region={region}'"
      priorities:
        type: "proximity"
        focus: "country_late"
    global_late:
      group_by: "country year month"
      max_sequences: 200
      sampling_scheme: "--probabilistic-sampling"
      exclude: "--exclude-where 'region={region}'"
      priorities:
        type: "proximity"
        focus: "country_late"

  lac-leman:
    geneva:
      group_by: "year month"
      seq_per_group: 300
      exclude: "--exclude-where 'division!=geneva'"
    vaud:
      group_by: "year month"
      seq_per_group: 300
      exclude: "--exclude-where 'division!=vaud'"
    valais:
      group_by: "year month"
      seq_per_group: 300
      exclude: "--exclude-where 'division!=valais'"

    # Contextual samples from the country
    country:
      group_by: "division year month"
      seq_per_group: 20
      exclude: "--exclude-where 'country!=switzerland'"

    # Contextual samples from division's region
    region:
      group_by: "country year month"
      seq_per_group: 10
      exclude: "--exclude-where 'region!=europe'"
      priorities:
        type: "proximity"
        focus: "country"
    # Contextual samples from the rest of the world, excluding the current
    # division to avoid resampling.
    global:
      group_by: "country year month"
      seq_per_group: 5
      exclude: "--exclude-where 'region=europe'"
      priorities:
        type: "proximity"
        focus: "country"

files:
  colors: "swiss_profile/colors.tsv"
  auspice_config: "swiss_profile/auspice_config_swiss.json"
  description: "swiss_profile/description.md"
